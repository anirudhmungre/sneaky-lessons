<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10400.17.0915.2112                               -->
<workbook original-version='10.4' source-build='10.4.0 (10400.17.0915.2112)' source-platform='mac' version='10.4' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='dog_intelligence.csv+ (Multiple Connections)' inline='true' name='federated.1x30vuo1nmq8ge13q5xmm0voq46k' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='dog_intelligence' name='textscan.1cbadjf0rswu971gwk1kr1b6i9a4'>
            <connection class='textscan' directory='/Users/hlee/Desktop/trilogy_dataviz/Tableau/2/Activities/Solved/03-Stu-Groups_Sets' filename='akc_breed_info.csv' password='' server='' />
          </named-connection>
          <named-connection caption='akc_breed_info' name='textscan.0mk0cje1dzupl11bqjsik05juls1'>
            <connection class='textscan' directory='/Users/hlee/Desktop/trilogy_dataviz/Tableau/2/Activities/Solved/03-Stu-Groups_Sets' filename='dog_intelligence.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[dog_intelligence.csv].[breed]' />
              <expression op='[akc_breed_info.csv].[breed]' />
            </expression>
          </clause>
          <relation connection='textscan.1cbadjf0rswu971gwk1kr1b6i9a4' name='dog_intelligence.csv' table='[dog_intelligence#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='breed' ordinal='0' />
              <column datatype='real' name='obey' ordinal='1' />
              <column datatype='integer' name='reps_lower' ordinal='2' />
              <column datatype='integer' name='reps_upper' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.0mk0cje1dzupl11bqjsik05juls1' name='akc_breed_info.csv' table='[akc_breed_info#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='breed' ordinal='0' />
              <column datatype='real' name='height_low_inches' ordinal='1' />
              <column datatype='real' name='height_high_inches' ordinal='2' />
              <column datatype='integer' name='weight_low_lbs' ordinal='3' />
              <column datatype='integer' name='weight_high_lbs' ordinal='4' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[breed (akc_breed_info.csv)]' value='[akc_breed_info.csv].[breed]' />
          <map key='[breed]' value='[dog_intelligence.csv].[breed]' />
          <map key='[height_high_inches]' value='[akc_breed_info.csv].[height_high_inches]' />
          <map key='[height_low_inches]' value='[akc_breed_info.csv].[height_low_inches]' />
          <map key='[obey]' value='[dog_intelligence.csv].[obey]' />
          <map key='[reps_lower]' value='[dog_intelligence.csv].[reps_lower]' />
          <map key='[reps_upper]' value='[dog_intelligence.csv].[reps_upper]' />
          <map key='[weight_high_lbs]' value='[akc_breed_info.csv].[weight_high_lbs]' />
          <map key='[weight_low_lbs]' value='[akc_breed_info.csv].[weight_low_lbs]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>breed</remote-name>
            <remote-type>129</remote-type>
            <local-name>[breed]</local-name>
            <parent-name>[dog_intelligence.csv]</parent-name>
            <remote-alias>breed</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>obey</remote-name>
            <remote-type>5</remote-type>
            <local-name>[obey]</local-name>
            <parent-name>[dog_intelligence.csv]</parent-name>
            <remote-alias>obey</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reps_lower</remote-name>
            <remote-type>20</remote-type>
            <local-name>[reps_lower]</local-name>
            <parent-name>[dog_intelligence.csv]</parent-name>
            <remote-alias>reps_lower</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reps_upper</remote-name>
            <remote-type>20</remote-type>
            <local-name>[reps_upper]</local-name>
            <parent-name>[dog_intelligence.csv]</parent-name>
            <remote-alias>reps_upper</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[dog_intelligence.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>breed</remote-name>
            <remote-type>129</remote-type>
            <local-name>[breed (akc_breed_info.csv)]</local-name>
            <parent-name>[akc_breed_info.csv]</parent-name>
            <remote-alias>breed</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>height_low_inches</remote-name>
            <remote-type>5</remote-type>
            <local-name>[height_low_inches]</local-name>
            <parent-name>[akc_breed_info.csv]</parent-name>
            <remote-alias>height_low_inches</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>height_high_inches</remote-name>
            <remote-type>5</remote-type>
            <local-name>[height_high_inches]</local-name>
            <parent-name>[akc_breed_info.csv]</parent-name>
            <remote-alias>height_high_inches</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weight_low_lbs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weight_low_lbs]</local-name>
            <parent-name>[akc_breed_info.csv]</parent-name>
            <remote-alias>weight_low_lbs</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weight_high_lbs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weight_high_lbs]</local-name>
            <parent-name>[akc_breed_info.csv]</parent-name>
            <remote-alias>weight_high_lbs</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[akc_breed_info.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Breed (Akc Breed Info.Csv) (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[breed (akc_breed_info.csv)]' new-bin='true'>
          <bin default-name='true' value='&quot;Affenpinscher, Australian Terrier, Bichon Frise and 18 more&quot;'>
            <value>&quot;Affenpinscher&quot;</value>
            <value>&quot;Australian Terrier&quot;</value>
            <value>&quot;Bichon Frise&quot;</value>
            <value>&quot;Border Terrier&quot;</value>
            <value>&quot;Cairn Terrier&quot;</value>
            <value>&quot;Cavalier King Charles Spaniel&quot;</value>
            <value>&quot;Chihuahua&quot;</value>
            <value>&quot;Chinese Crested&quot;</value>
            <value>&quot;Dandie Dinmont Terrier&quot;</value>
            <value>&quot;Italian Greyhound&quot;</value>
            <value>&quot;Japanese Chin&quot;</value>
            <value>&quot;Lakeland Terrier&quot;</value>
            <value>&quot;Maltese&quot;</value>
            <value>&quot;Papillon&quot;</value>
            <value>&quot;Pomeranian&quot;</value>
            <value>&quot;Schipperke&quot;</value>
            <value>&quot;Sealyham Terrier&quot;</value>
            <value>&quot;Shih Tzu&quot;</value>
            <value>&quot;Tibetan Spaniel&quot;</value>
            <value>&quot;West Highland White Terrier&quot;</value>
            <value>&quot;Yorkshire Terrier&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Breed (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[breed]' new-bin='true'>
          <bin default-name='false' value='&quot;Large&quot;'>
            <value>&quot;Akita&quot;</value>
            <value>&quot;American Foxhound&quot;</value>
            <value>&quot;Belgian Malinois&quot;</value>
            <value>&quot;Belgian Sheepdog&quot;</value>
            <value>&quot;Bernese Mountain Dog&quot;</value>
            <value>&quot;Bloodhound&quot;</value>
            <value>&quot;Borzoi&quot;</value>
            <value>&quot;Boxer&quot;</value>
            <value>&quot;Briard&quot;</value>
            <value>&quot;Bull Terrier&quot;</value>
            <value>&quot;Bullmastiff&quot;</value>
            <value>&quot;Chesapeake Bay Retriever&quot;</value>
            <value>&quot;Clumber Spaniel&quot;</value>
            <value>&quot;Curly Coated Retriever&quot;</value>
            <value>&quot;Dalmatian&quot;</value>
            <value>&quot;Doberman Pinscher&quot;</value>
            <value>&quot;English Foxhound&quot;</value>
            <value>&quot;English Setter&quot;</value>
            <value>&quot;German Shorthaired Pointer&quot;</value>
            <value>&quot;German Wirehaired Pointer&quot;</value>
            <value>&quot;Giant Schnauzer&quot;</value>
            <value>&quot;Golden Retriever&quot;</value>
            <value>&quot;Gordon Setter&quot;</value>
            <value>&quot;Great Dane&quot;</value>
            <value>&quot;Great Pyrenees&quot;</value>
            <value>&quot;Greyhound&quot;</value>
            <value>&quot;Irish Setter&quot;</value>
            <value>&quot;Irish Water Spaniel&quot;</value>
            <value>&quot;Irish Wolfhound&quot;</value>
            <value>&quot;Kuvasz&quot;</value>
            <value>&quot;Labrador Retriever&quot;</value>
            <value>&quot;Mastiff&quot;</value>
            <value>&quot;Newfoundland&quot;</value>
            <value>&quot;Pointer&quot;</value>
            <value>&quot;Rhodesian Ridgeback&quot;</value>
            <value>&quot;Rottweiler&quot;</value>
            <value>&quot;Saint Bernard&quot;</value>
            <value>&quot;Saluki&quot;</value>
            <value>&quot;Samoyed&quot;</value>
            <value>&quot;Scottish Deerhound&quot;</value>
            <value>&quot;Weimaraner&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Medium&quot;'>
            <value>&quot;Afghan Hound&quot;</value>
            <value>&quot;American Staffordshire Terrier&quot;</value>
            <value>&quot;American Water Spaniel&quot;</value>
            <value>&quot;Australian Cattle Dog&quot;</value>
            <value>&quot;Australian Shepherd&quot;</value>
            <value>&quot;Basenji&quot;</value>
            <value>&quot;Basset Hound&quot;</value>
            <value>&quot;Beagle&quot;</value>
            <value>&quot;Bearded Collie&quot;</value>
            <value>&quot;Bedlington Terrier&quot;</value>
            <value>&quot;Border Collie&quot;</value>
            <value>&quot;Boston Terrier&quot;</value>
            <value>&quot;Brittany&quot;</value>
            <value>&quot;Cardigan Welsh Corgi&quot;</value>
            <value>&quot;Chinese Shar Pei&quot;</value>
            <value>&quot;Chow Chow&quot;</value>
            <value>&quot;Dachshund&quot;</value>
            <value>&quot;English Springer Spaniel&quot;</value>
            <value>&quot;Field Spaniel&quot;</value>
            <value>&quot;Finnish Spitz&quot;</value>
            <value>&quot;French Bulldog&quot;</value>
            <value>&quot;Ibizan Hound&quot;</value>
            <value>&quot;Irish Terrier&quot;</value>
            <value>&quot;Keeshond&quot;</value>
            <value>&quot;Kerry Blue Terrier&quot;</value>
            <value>&quot;Norwegian Elkhound&quot;</value>
            <value>&quot;Pharaoh Hound&quot;</value>
            <value>&quot;Portuguese Water Dog&quot;</value>
            <value>&quot;Pug&quot;</value>
            <value>&quot;Puli&quot;</value>
            <value>&quot;Scottish Terrier&quot;</value>
            <value>&quot;Shiba Inu&quot;</value>
            <value>&quot;Siberian Husky&quot;</value>
            <value>&quot;Skye Terrier&quot;</value>
            <value>&quot;Staffordshire Bull Terrier&quot;</value>
            <value>&quot;Standard Schnauzer&quot;</value>
            <value>&quot;Tibetan Terrier&quot;</value>
            <value>&quot;Vizsla&quot;</value>
            <value>&quot;Welsh Springer Spaniel&quot;</value>
            <value>&quot;Welsh Terrier&quot;</value>
            <value>&quot;Whippet&quot;</value>
            <value>&quot;Wirehaired Pointing Griffon&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Small&quot;'>
            <value>&quot;Affenpinscher&quot;</value>
            <value>&quot;Australian Terrier&quot;</value>
            <value>&quot;Bichon Frise&quot;</value>
            <value>&quot;Border Terrier&quot;</value>
            <value>&quot;Cairn Terrier&quot;</value>
            <value>&quot;Cavalier King Charles Spaniel&quot;</value>
            <value>&quot;Chihuahua&quot;</value>
            <value>&quot;Chinese Crested&quot;</value>
            <value>&quot;Dandie Dinmont Terrier&quot;</value>
            <value>&quot;Italian Greyhound&quot;</value>
            <value>&quot;Japanese Chin&quot;</value>
            <value>&quot;Lakeland Terrier&quot;</value>
            <value>&quot;Maltese&quot;</value>
            <value>&quot;Papillon&quot;</value>
            <value>&quot;Pomeranian&quot;</value>
            <value>&quot;Schipperke&quot;</value>
            <value>&quot;Sealyham Terrier&quot;</value>
            <value>&quot;Shih Tzu&quot;</value>
            <value>&quot;Tibetan Spaniel&quot;</value>
            <value>&quot;West Highland White Terrier&quot;</value>
            <value>&quot;Yorkshire Terrier&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Breed (Akc Breed Info.Csv)' datatype='string' name='[breed (akc_breed_info.csv)]' role='dimension' type='nominal' />
      <column caption='Breed' datatype='string' name='[breed]' role='dimension' type='nominal' />
      <column caption='Height High Inches' datatype='real' name='[height_high_inches]' role='measure' type='quantitative' />
      <column caption='Height Low Inches' datatype='real' name='[height_low_inches]' role='measure' type='quantitative' />
      <column caption='Obey' datatype='real' name='[obey]' role='measure' type='quantitative' />
      <column caption='Reps Lower' datatype='integer' name='[reps_lower]' role='measure' type='quantitative' />
      <column caption='Reps Upper' datatype='integer' name='[reps_upper]' role='measure' type='quantitative' />
      <column caption='Weight High Lbs' datatype='integer' name='[weight_high_lbs]' role='measure' type='quantitative' />
      <column caption='Weight Low Lbs' datatype='integer' name='[weight_low_lbs]' role='measure' type='quantitative' />
      <column-instance column='[Small Breeds]' derivation='InOut' name='[io:Small Breeds:nk]' pivot='key' type='nominal'>
        <aliases>
          <alias key='false' value='Medium &amp; Large' />
          <alias key='true' value='Small' />
        </aliases>
      </column-instance>
      <group name='[Large Breeds]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[breed]' member='&quot;Akita&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;American Foxhound&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Belgian Malinois&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Belgian Sheepdog&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Bernese Mountain Dog&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Bloodhound&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Borzoi&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Boxer&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Briard&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Bull Terrier&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Bullmastiff&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Chesapeake Bay Retriever&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Clumber Spaniel&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Curly Coated Retriever&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Dalmatian&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Doberman Pinscher&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;English Foxhound&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;English Setter&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;German Shorthaired Pointer&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;German Wirehaired Pointer&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Giant Schnauzer&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Golden Retriever&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Gordon Setter&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Great Dane&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Great Pyrenees&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Greyhound&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Irish Setter&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Irish Water Spaniel&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Irish Wolfhound&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Kuvasz&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Labrador Retriever&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Mastiff&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Newfoundland&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Pointer&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Rhodesian Ridgeback&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Rottweiler&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Saint Bernard&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Saluki&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Samoyed&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Scottish Deerhound&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Weimaraner&quot;' />
        </groupfilter>
      </group>
      <group name='[Medium Breeds]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[breed]' member='&quot;Afghan Hound&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;American Staffordshire Terrier&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;American Water Spaniel&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Australian Cattle Dog&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Australian Shepherd&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Basenji&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Basset Hound&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Beagle&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Bearded Collie&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Bedlington Terrier&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Border Collie&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Boston Terrier&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Brittany&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Cardigan Welsh Corgi&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Chinese Shar Pei&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Chow Chow&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Dachshund&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;English Springer Spaniel&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Field Spaniel&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Finnish Spitz&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;French Bulldog&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Ibizan Hound&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Irish Terrier&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Keeshond&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Kerry Blue Terrier&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Norwegian Elkhound&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Pharaoh Hound&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Portuguese Water Dog&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Pug&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Puli&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Scottish Terrier&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Shiba Inu&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Siberian Husky&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Skye Terrier&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Staffordshire Bull Terrier&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Standard Schnauzer&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Tibetan Terrier&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Vizsla&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Welsh Springer Spaniel&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Welsh Terrier&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Whippet&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Wirehaired Pointing Griffon&quot;' />
        </groupfilter>
      </group>
      <group name='[Small Breeds]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[breed]' member='&quot;Affenpinscher&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Australian Terrier&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Bichon Frise&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Border Terrier&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Cairn Terrier&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Cavalier King Charles Spaniel&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Chihuahua&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Chinese Crested&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Dandie Dinmont Terrier&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Italian Greyhound&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Japanese Chin&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Lakeland Terrier&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Maltese&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Papillon&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Pomeranian&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Schipperke&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Sealyham Terrier&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Shih Tzu&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Tibetan Spaniel&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;West Highland White Terrier&quot;' />
          <groupfilter function='member' level='[breed]' member='&quot;Yorkshire Terrier&quot;' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.33526' group-percentage='0.169557' measure-ordering='alphabetic' measure-percentage='0.495183' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Group/Lower reps'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Breed size and # of reps required to learn a new command (lower limit)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='dog_intelligence.csv+ (Multiple Connections)' name='federated.1x30vuo1nmq8ge13q5xmm0voq46k' />
          </datasources>
          <datasource-dependencies datasource='federated.1x30vuo1nmq8ge13q5xmm0voq46k'>
            <column datatype='string' name='[Breed (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[breed]' new-bin='true'>
                <bin default-name='false' value='&quot;Large&quot;'>
                  <value>&quot;Akita&quot;</value>
                  <value>&quot;American Foxhound&quot;</value>
                  <value>&quot;Belgian Malinois&quot;</value>
                  <value>&quot;Belgian Sheepdog&quot;</value>
                  <value>&quot;Bernese Mountain Dog&quot;</value>
                  <value>&quot;Bloodhound&quot;</value>
                  <value>&quot;Borzoi&quot;</value>
                  <value>&quot;Boxer&quot;</value>
                  <value>&quot;Briard&quot;</value>
                  <value>&quot;Bull Terrier&quot;</value>
                  <value>&quot;Bullmastiff&quot;</value>
                  <value>&quot;Chesapeake Bay Retriever&quot;</value>
                  <value>&quot;Clumber Spaniel&quot;</value>
                  <value>&quot;Curly Coated Retriever&quot;</value>
                  <value>&quot;Dalmatian&quot;</value>
                  <value>&quot;Doberman Pinscher&quot;</value>
                  <value>&quot;English Foxhound&quot;</value>
                  <value>&quot;English Setter&quot;</value>
                  <value>&quot;German Shorthaired Pointer&quot;</value>
                  <value>&quot;German Wirehaired Pointer&quot;</value>
                  <value>&quot;Giant Schnauzer&quot;</value>
                  <value>&quot;Golden Retriever&quot;</value>
                  <value>&quot;Gordon Setter&quot;</value>
                  <value>&quot;Great Dane&quot;</value>
                  <value>&quot;Great Pyrenees&quot;</value>
                  <value>&quot;Greyhound&quot;</value>
                  <value>&quot;Irish Setter&quot;</value>
                  <value>&quot;Irish Water Spaniel&quot;</value>
                  <value>&quot;Irish Wolfhound&quot;</value>
                  <value>&quot;Kuvasz&quot;</value>
                  <value>&quot;Labrador Retriever&quot;</value>
                  <value>&quot;Mastiff&quot;</value>
                  <value>&quot;Newfoundland&quot;</value>
                  <value>&quot;Pointer&quot;</value>
                  <value>&quot;Rhodesian Ridgeback&quot;</value>
                  <value>&quot;Rottweiler&quot;</value>
                  <value>&quot;Saint Bernard&quot;</value>
                  <value>&quot;Saluki&quot;</value>
                  <value>&quot;Samoyed&quot;</value>
                  <value>&quot;Scottish Deerhound&quot;</value>
                  <value>&quot;Weimaraner&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Medium&quot;'>
                  <value>&quot;Afghan Hound&quot;</value>
                  <value>&quot;American Staffordshire Terrier&quot;</value>
                  <value>&quot;American Water Spaniel&quot;</value>
                  <value>&quot;Australian Cattle Dog&quot;</value>
                  <value>&quot;Australian Shepherd&quot;</value>
                  <value>&quot;Basenji&quot;</value>
                  <value>&quot;Basset Hound&quot;</value>
                  <value>&quot;Beagle&quot;</value>
                  <value>&quot;Bearded Collie&quot;</value>
                  <value>&quot;Bedlington Terrier&quot;</value>
                  <value>&quot;Border Collie&quot;</value>
                  <value>&quot;Boston Terrier&quot;</value>
                  <value>&quot;Brittany&quot;</value>
                  <value>&quot;Cardigan Welsh Corgi&quot;</value>
                  <value>&quot;Chinese Shar Pei&quot;</value>
                  <value>&quot;Chow Chow&quot;</value>
                  <value>&quot;Dachshund&quot;</value>
                  <value>&quot;English Springer Spaniel&quot;</value>
                  <value>&quot;Field Spaniel&quot;</value>
                  <value>&quot;Finnish Spitz&quot;</value>
                  <value>&quot;French Bulldog&quot;</value>
                  <value>&quot;Ibizan Hound&quot;</value>
                  <value>&quot;Irish Terrier&quot;</value>
                  <value>&quot;Keeshond&quot;</value>
                  <value>&quot;Kerry Blue Terrier&quot;</value>
                  <value>&quot;Norwegian Elkhound&quot;</value>
                  <value>&quot;Pharaoh Hound&quot;</value>
                  <value>&quot;Portuguese Water Dog&quot;</value>
                  <value>&quot;Pug&quot;</value>
                  <value>&quot;Puli&quot;</value>
                  <value>&quot;Scottish Terrier&quot;</value>
                  <value>&quot;Shiba Inu&quot;</value>
                  <value>&quot;Siberian Husky&quot;</value>
                  <value>&quot;Skye Terrier&quot;</value>
                  <value>&quot;Staffordshire Bull Terrier&quot;</value>
                  <value>&quot;Standard Schnauzer&quot;</value>
                  <value>&quot;Tibetan Terrier&quot;</value>
                  <value>&quot;Vizsla&quot;</value>
                  <value>&quot;Welsh Springer Spaniel&quot;</value>
                  <value>&quot;Welsh Terrier&quot;</value>
                  <value>&quot;Whippet&quot;</value>
                  <value>&quot;Wirehaired Pointing Griffon&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Small&quot;'>
                  <value>&quot;Affenpinscher&quot;</value>
                  <value>&quot;Australian Terrier&quot;</value>
                  <value>&quot;Bichon Frise&quot;</value>
                  <value>&quot;Border Terrier&quot;</value>
                  <value>&quot;Cairn Terrier&quot;</value>
                  <value>&quot;Cavalier King Charles Spaniel&quot;</value>
                  <value>&quot;Chihuahua&quot;</value>
                  <value>&quot;Chinese Crested&quot;</value>
                  <value>&quot;Dandie Dinmont Terrier&quot;</value>
                  <value>&quot;Italian Greyhound&quot;</value>
                  <value>&quot;Japanese Chin&quot;</value>
                  <value>&quot;Lakeland Terrier&quot;</value>
                  <value>&quot;Maltese&quot;</value>
                  <value>&quot;Papillon&quot;</value>
                  <value>&quot;Pomeranian&quot;</value>
                  <value>&quot;Schipperke&quot;</value>
                  <value>&quot;Sealyham Terrier&quot;</value>
                  <value>&quot;Shih Tzu&quot;</value>
                  <value>&quot;Tibetan Spaniel&quot;</value>
                  <value>&quot;West Highland White Terrier&quot;</value>
                  <value>&quot;Yorkshire Terrier&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[reps_lower]' derivation='Avg' name='[avg:reps_lower:qk]' pivot='key' type='quantitative' />
            <column caption='Breed' datatype='string' name='[breed]' role='dimension' type='nominal' />
            <column caption='Reps Lower' datatype='integer' name='[reps_lower]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[Breed (group)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Breed (group)]' />
              <groupfilter function='member' level='[Breed (group)]' member='&quot;Alaskan Malamute&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[Breed (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#499894' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[Breed (group)]</rows>
        <cols>[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[avg:reps_lower:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Group/Obedience'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Breed size and obedience on first command</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='dog_intelligence.csv+ (Multiple Connections)' name='federated.1x30vuo1nmq8ge13q5xmm0voq46k' />
          </datasources>
          <datasource-dependencies datasource='federated.1x30vuo1nmq8ge13q5xmm0voq46k'>
            <column datatype='string' name='[Breed (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[breed]' new-bin='true'>
                <bin default-name='false' value='&quot;Large&quot;'>
                  <value>&quot;Akita&quot;</value>
                  <value>&quot;American Foxhound&quot;</value>
                  <value>&quot;Belgian Malinois&quot;</value>
                  <value>&quot;Belgian Sheepdog&quot;</value>
                  <value>&quot;Bernese Mountain Dog&quot;</value>
                  <value>&quot;Bloodhound&quot;</value>
                  <value>&quot;Borzoi&quot;</value>
                  <value>&quot;Boxer&quot;</value>
                  <value>&quot;Briard&quot;</value>
                  <value>&quot;Bull Terrier&quot;</value>
                  <value>&quot;Bullmastiff&quot;</value>
                  <value>&quot;Chesapeake Bay Retriever&quot;</value>
                  <value>&quot;Clumber Spaniel&quot;</value>
                  <value>&quot;Curly Coated Retriever&quot;</value>
                  <value>&quot;Dalmatian&quot;</value>
                  <value>&quot;Doberman Pinscher&quot;</value>
                  <value>&quot;English Foxhound&quot;</value>
                  <value>&quot;English Setter&quot;</value>
                  <value>&quot;German Shorthaired Pointer&quot;</value>
                  <value>&quot;German Wirehaired Pointer&quot;</value>
                  <value>&quot;Giant Schnauzer&quot;</value>
                  <value>&quot;Golden Retriever&quot;</value>
                  <value>&quot;Gordon Setter&quot;</value>
                  <value>&quot;Great Dane&quot;</value>
                  <value>&quot;Great Pyrenees&quot;</value>
                  <value>&quot;Greyhound&quot;</value>
                  <value>&quot;Irish Setter&quot;</value>
                  <value>&quot;Irish Water Spaniel&quot;</value>
                  <value>&quot;Irish Wolfhound&quot;</value>
                  <value>&quot;Kuvasz&quot;</value>
                  <value>&quot;Labrador Retriever&quot;</value>
                  <value>&quot;Mastiff&quot;</value>
                  <value>&quot;Newfoundland&quot;</value>
                  <value>&quot;Pointer&quot;</value>
                  <value>&quot;Rhodesian Ridgeback&quot;</value>
                  <value>&quot;Rottweiler&quot;</value>
                  <value>&quot;Saint Bernard&quot;</value>
                  <value>&quot;Saluki&quot;</value>
                  <value>&quot;Samoyed&quot;</value>
                  <value>&quot;Scottish Deerhound&quot;</value>
                  <value>&quot;Weimaraner&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Medium&quot;'>
                  <value>&quot;Afghan Hound&quot;</value>
                  <value>&quot;American Staffordshire Terrier&quot;</value>
                  <value>&quot;American Water Spaniel&quot;</value>
                  <value>&quot;Australian Cattle Dog&quot;</value>
                  <value>&quot;Australian Shepherd&quot;</value>
                  <value>&quot;Basenji&quot;</value>
                  <value>&quot;Basset Hound&quot;</value>
                  <value>&quot;Beagle&quot;</value>
                  <value>&quot;Bearded Collie&quot;</value>
                  <value>&quot;Bedlington Terrier&quot;</value>
                  <value>&quot;Border Collie&quot;</value>
                  <value>&quot;Boston Terrier&quot;</value>
                  <value>&quot;Brittany&quot;</value>
                  <value>&quot;Cardigan Welsh Corgi&quot;</value>
                  <value>&quot;Chinese Shar Pei&quot;</value>
                  <value>&quot;Chow Chow&quot;</value>
                  <value>&quot;Dachshund&quot;</value>
                  <value>&quot;English Springer Spaniel&quot;</value>
                  <value>&quot;Field Spaniel&quot;</value>
                  <value>&quot;Finnish Spitz&quot;</value>
                  <value>&quot;French Bulldog&quot;</value>
                  <value>&quot;Ibizan Hound&quot;</value>
                  <value>&quot;Irish Terrier&quot;</value>
                  <value>&quot;Keeshond&quot;</value>
                  <value>&quot;Kerry Blue Terrier&quot;</value>
                  <value>&quot;Norwegian Elkhound&quot;</value>
                  <value>&quot;Pharaoh Hound&quot;</value>
                  <value>&quot;Portuguese Water Dog&quot;</value>
                  <value>&quot;Pug&quot;</value>
                  <value>&quot;Puli&quot;</value>
                  <value>&quot;Scottish Terrier&quot;</value>
                  <value>&quot;Shiba Inu&quot;</value>
                  <value>&quot;Siberian Husky&quot;</value>
                  <value>&quot;Skye Terrier&quot;</value>
                  <value>&quot;Staffordshire Bull Terrier&quot;</value>
                  <value>&quot;Standard Schnauzer&quot;</value>
                  <value>&quot;Tibetan Terrier&quot;</value>
                  <value>&quot;Vizsla&quot;</value>
                  <value>&quot;Welsh Springer Spaniel&quot;</value>
                  <value>&quot;Welsh Terrier&quot;</value>
                  <value>&quot;Whippet&quot;</value>
                  <value>&quot;Wirehaired Pointing Griffon&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Small&quot;'>
                  <value>&quot;Affenpinscher&quot;</value>
                  <value>&quot;Australian Terrier&quot;</value>
                  <value>&quot;Bichon Frise&quot;</value>
                  <value>&quot;Border Terrier&quot;</value>
                  <value>&quot;Cairn Terrier&quot;</value>
                  <value>&quot;Cavalier King Charles Spaniel&quot;</value>
                  <value>&quot;Chihuahua&quot;</value>
                  <value>&quot;Chinese Crested&quot;</value>
                  <value>&quot;Dandie Dinmont Terrier&quot;</value>
                  <value>&quot;Italian Greyhound&quot;</value>
                  <value>&quot;Japanese Chin&quot;</value>
                  <value>&quot;Lakeland Terrier&quot;</value>
                  <value>&quot;Maltese&quot;</value>
                  <value>&quot;Papillon&quot;</value>
                  <value>&quot;Pomeranian&quot;</value>
                  <value>&quot;Schipperke&quot;</value>
                  <value>&quot;Sealyham Terrier&quot;</value>
                  <value>&quot;Shih Tzu&quot;</value>
                  <value>&quot;Tibetan Spaniel&quot;</value>
                  <value>&quot;West Highland White Terrier&quot;</value>
                  <value>&quot;Yorkshire Terrier&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[obey]' derivation='Avg' name='[avg:obey:qk]' pivot='key' type='quantitative' />
            <column-instance column='[weight_high_lbs]' derivation='Avg' name='[avg:weight_high_lbs:qk]' pivot='key' type='quantitative' />
            <column caption='Breed' datatype='string' name='[breed]' role='dimension' type='nominal' />
            <column-instance column='[breed]' derivation='None' name='[none:breed:nk]' pivot='key' type='nominal' />
            <column caption='Obey' datatype='real' name='[obey]' role='measure' type='quantitative' />
            <column caption='Weight High Lbs' datatype='integer' name='[weight_high_lbs]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[Breed (group)]' direction='DESC' using='[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[avg:weight_high_lbs:qk]' />
          <filter class='categorical' column='[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[none:breed:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:breed:nk]' />
              <groupfilter function='member' level='[none:breed:nk]' member='&quot;Alaskan Malamute&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[none:breed:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#b07aa1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[Breed (group)]</rows>
        <cols>[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[avg:obey:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Group/Obedience b'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Breed size and obedience on first command</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='dog_intelligence.csv+ (Multiple Connections)' name='federated.1x30vuo1nmq8ge13q5xmm0voq46k' />
          </datasources>
          <datasource-dependencies datasource='federated.1x30vuo1nmq8ge13q5xmm0voq46k'>
            <column-instance column='[weight_high_lbs]' derivation='Avg' name='[avg:weight_high_lbs:qk]' pivot='key' type='quantitative' />
            <column caption='Breed' datatype='string' name='[breed]' role='dimension' type='nominal' />
            <column-instance column='[breed]' derivation='None' name='[none:breed:nk]' pivot='key' type='nominal' />
            <column caption='Weight High Lbs' datatype='integer' name='[weight_high_lbs]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[none:breed:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:breed:nk]' />
              <groupfilter function='member' level='[none:breed:nk]' member='&quot;Alaskan Malamute&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[none:breed:nk]' direction='DESC' using='[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[avg:weight_high_lbs:qk]' />
          <slices>
            <column>[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[none:breed:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#b07aa1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[none:breed:nk]</rows>
        <cols>[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[avg:weight_high_lbs:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Group/Upper reps'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Breed size and # of reps required to learn a new command (upper limit)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='dog_intelligence.csv+ (Multiple Connections)' name='federated.1x30vuo1nmq8ge13q5xmm0voq46k' />
          </datasources>
          <datasource-dependencies datasource='federated.1x30vuo1nmq8ge13q5xmm0voq46k'>
            <column datatype='string' name='[Breed (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[breed]' new-bin='true'>
                <bin default-name='false' value='&quot;Large&quot;'>
                  <value>&quot;Akita&quot;</value>
                  <value>&quot;American Foxhound&quot;</value>
                  <value>&quot;Belgian Malinois&quot;</value>
                  <value>&quot;Belgian Sheepdog&quot;</value>
                  <value>&quot;Bernese Mountain Dog&quot;</value>
                  <value>&quot;Bloodhound&quot;</value>
                  <value>&quot;Borzoi&quot;</value>
                  <value>&quot;Boxer&quot;</value>
                  <value>&quot;Briard&quot;</value>
                  <value>&quot;Bull Terrier&quot;</value>
                  <value>&quot;Bullmastiff&quot;</value>
                  <value>&quot;Chesapeake Bay Retriever&quot;</value>
                  <value>&quot;Clumber Spaniel&quot;</value>
                  <value>&quot;Curly Coated Retriever&quot;</value>
                  <value>&quot;Dalmatian&quot;</value>
                  <value>&quot;Doberman Pinscher&quot;</value>
                  <value>&quot;English Foxhound&quot;</value>
                  <value>&quot;English Setter&quot;</value>
                  <value>&quot;German Shorthaired Pointer&quot;</value>
                  <value>&quot;German Wirehaired Pointer&quot;</value>
                  <value>&quot;Giant Schnauzer&quot;</value>
                  <value>&quot;Golden Retriever&quot;</value>
                  <value>&quot;Gordon Setter&quot;</value>
                  <value>&quot;Great Dane&quot;</value>
                  <value>&quot;Great Pyrenees&quot;</value>
                  <value>&quot;Greyhound&quot;</value>
                  <value>&quot;Irish Setter&quot;</value>
                  <value>&quot;Irish Water Spaniel&quot;</value>
                  <value>&quot;Irish Wolfhound&quot;</value>
                  <value>&quot;Kuvasz&quot;</value>
                  <value>&quot;Labrador Retriever&quot;</value>
                  <value>&quot;Mastiff&quot;</value>
                  <value>&quot;Newfoundland&quot;</value>
                  <value>&quot;Pointer&quot;</value>
                  <value>&quot;Rhodesian Ridgeback&quot;</value>
                  <value>&quot;Rottweiler&quot;</value>
                  <value>&quot;Saint Bernard&quot;</value>
                  <value>&quot;Saluki&quot;</value>
                  <value>&quot;Samoyed&quot;</value>
                  <value>&quot;Scottish Deerhound&quot;</value>
                  <value>&quot;Weimaraner&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Medium&quot;'>
                  <value>&quot;Afghan Hound&quot;</value>
                  <value>&quot;American Staffordshire Terrier&quot;</value>
                  <value>&quot;American Water Spaniel&quot;</value>
                  <value>&quot;Australian Cattle Dog&quot;</value>
                  <value>&quot;Australian Shepherd&quot;</value>
                  <value>&quot;Basenji&quot;</value>
                  <value>&quot;Basset Hound&quot;</value>
                  <value>&quot;Beagle&quot;</value>
                  <value>&quot;Bearded Collie&quot;</value>
                  <value>&quot;Bedlington Terrier&quot;</value>
                  <value>&quot;Border Collie&quot;</value>
                  <value>&quot;Boston Terrier&quot;</value>
                  <value>&quot;Brittany&quot;</value>
                  <value>&quot;Cardigan Welsh Corgi&quot;</value>
                  <value>&quot;Chinese Shar Pei&quot;</value>
                  <value>&quot;Chow Chow&quot;</value>
                  <value>&quot;Dachshund&quot;</value>
                  <value>&quot;English Springer Spaniel&quot;</value>
                  <value>&quot;Field Spaniel&quot;</value>
                  <value>&quot;Finnish Spitz&quot;</value>
                  <value>&quot;French Bulldog&quot;</value>
                  <value>&quot;Ibizan Hound&quot;</value>
                  <value>&quot;Irish Terrier&quot;</value>
                  <value>&quot;Keeshond&quot;</value>
                  <value>&quot;Kerry Blue Terrier&quot;</value>
                  <value>&quot;Norwegian Elkhound&quot;</value>
                  <value>&quot;Pharaoh Hound&quot;</value>
                  <value>&quot;Portuguese Water Dog&quot;</value>
                  <value>&quot;Pug&quot;</value>
                  <value>&quot;Puli&quot;</value>
                  <value>&quot;Scottish Terrier&quot;</value>
                  <value>&quot;Shiba Inu&quot;</value>
                  <value>&quot;Siberian Husky&quot;</value>
                  <value>&quot;Skye Terrier&quot;</value>
                  <value>&quot;Staffordshire Bull Terrier&quot;</value>
                  <value>&quot;Standard Schnauzer&quot;</value>
                  <value>&quot;Tibetan Terrier&quot;</value>
                  <value>&quot;Vizsla&quot;</value>
                  <value>&quot;Welsh Springer Spaniel&quot;</value>
                  <value>&quot;Welsh Terrier&quot;</value>
                  <value>&quot;Whippet&quot;</value>
                  <value>&quot;Wirehaired Pointing Griffon&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Small&quot;'>
                  <value>&quot;Affenpinscher&quot;</value>
                  <value>&quot;Australian Terrier&quot;</value>
                  <value>&quot;Bichon Frise&quot;</value>
                  <value>&quot;Border Terrier&quot;</value>
                  <value>&quot;Cairn Terrier&quot;</value>
                  <value>&quot;Cavalier King Charles Spaniel&quot;</value>
                  <value>&quot;Chihuahua&quot;</value>
                  <value>&quot;Chinese Crested&quot;</value>
                  <value>&quot;Dandie Dinmont Terrier&quot;</value>
                  <value>&quot;Italian Greyhound&quot;</value>
                  <value>&quot;Japanese Chin&quot;</value>
                  <value>&quot;Lakeland Terrier&quot;</value>
                  <value>&quot;Maltese&quot;</value>
                  <value>&quot;Papillon&quot;</value>
                  <value>&quot;Pomeranian&quot;</value>
                  <value>&quot;Schipperke&quot;</value>
                  <value>&quot;Sealyham Terrier&quot;</value>
                  <value>&quot;Shih Tzu&quot;</value>
                  <value>&quot;Tibetan Spaniel&quot;</value>
                  <value>&quot;West Highland White Terrier&quot;</value>
                  <value>&quot;Yorkshire Terrier&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Breed' datatype='string' name='[breed]' role='dimension' type='nominal' />
            <column caption='Reps Upper' datatype='integer' name='[reps_upper]' role='measure' type='quantitative' />
            <column-instance column='[reps_upper]' derivation='Sum' name='[sum:reps_upper:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[Breed (group)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Breed (group)]' />
              <groupfilter function='member' level='[Breed (group)]' member='&quot;Alaskan Malamute&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[Breed (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#edc948' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[Breed (group)]</rows>
        <cols>[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[sum:reps_upper:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Set/Large dog min reps'>
      <table>
        <view>
          <datasources>
            <datasource caption='dog_intelligence.csv+ (Multiple Connections)' name='federated.1x30vuo1nmq8ge13q5xmm0voq46k' />
          </datasources>
          <datasource-dependencies datasource='federated.1x30vuo1nmq8ge13q5xmm0voq46k'>
            <column-instance column='[reps_lower]' derivation='Avg' name='[avg:reps_lower:qk]' pivot='key' type='quantitative' />
            <column caption='Breed' datatype='string' name='[breed]' role='dimension' type='nominal' />
            <column-instance column='[Large Breeds]' derivation='InOut' name='[io:Large Breeds:nk]' pivot='key' type='nominal' />
            <column caption='Reps Lower' datatype='integer' name='[reps_lower]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[io:Large Breeds:nk]</rows>
        <cols>[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[avg:reps_lower:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Set/Large dog obedience'>
      <table>
        <view>
          <datasources>
            <datasource caption='dog_intelligence.csv+ (Multiple Connections)' name='federated.1x30vuo1nmq8ge13q5xmm0voq46k' />
          </datasources>
          <datasource-dependencies datasource='federated.1x30vuo1nmq8ge13q5xmm0voq46k'>
            <column-instance column='[obey]' derivation='Avg' name='[avg:obey:qk]' pivot='key' type='quantitative' />
            <column caption='Breed' datatype='string' name='[breed]' role='dimension' type='nominal' />
            <column-instance column='[Large Breeds]' derivation='InOut' name='[io:Large Breeds:nk]' pivot='key' type='nominal' />
            <column caption='Obey' datatype='real' name='[obey]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[io:Large Breeds:nk]</rows>
        <cols>[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[avg:obey:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Set/Small dog max reps'>
      <table>
        <view>
          <datasources>
            <datasource caption='dog_intelligence.csv+ (Multiple Connections)' name='federated.1x30vuo1nmq8ge13q5xmm0voq46k' />
          </datasources>
          <datasource-dependencies datasource='federated.1x30vuo1nmq8ge13q5xmm0voq46k'>
            <column-instance column='[reps_upper]' derivation='Avg' name='[avg:reps_upper:qk]' pivot='key' type='quantitative' />
            <column caption='Breed' datatype='string' name='[breed]' role='dimension' type='nominal' />
            <column-instance column='[Small Breeds]' derivation='InOut' name='[io:Small Breeds:nk]' pivot='key' type='nominal'>
              <aliases>
                <alias key='false' value='Medium &amp; Large' />
                <alias key='true' value='Small' />
              </aliases>
            </column-instance>
            <column caption='Reps Upper' datatype='integer' name='[reps_upper]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[io:Small Breeds:nk]</rows>
        <cols>[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[avg:reps_upper:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Set/Small dog min reps'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Minimum # of reps required to learn a new command</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='dog_intelligence.csv+ (Multiple Connections)' name='federated.1x30vuo1nmq8ge13q5xmm0voq46k' />
          </datasources>
          <datasource-dependencies datasource='federated.1x30vuo1nmq8ge13q5xmm0voq46k'>
            <column-instance column='[reps_lower]' derivation='Avg' name='[avg:reps_lower:qk]' pivot='key' type='quantitative' />
            <column caption='Breed' datatype='string' name='[breed]' role='dimension' type='nominal' />
            <column-instance column='[Small Breeds]' derivation='InOut' name='[io:Small Breeds:nk]' pivot='key' type='nominal'>
              <aliases>
                <alias key='false' value='Medium &amp; Large' />
                <alias key='true' value='Small' />
              </aliases>
            </column-instance>
            <column caption='Reps Lower' datatype='integer' name='[reps_lower]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[io:Small Breeds:nk]</rows>
        <cols>[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[avg:reps_lower:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Set/Small dog obedience'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Obedience rate of small breeds vs medium &amp; large  breeds</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='dog_intelligence.csv+ (Multiple Connections)' name='federated.1x30vuo1nmq8ge13q5xmm0voq46k' />
          </datasources>
          <datasource-dependencies datasource='federated.1x30vuo1nmq8ge13q5xmm0voq46k'>
            <column-instance column='[obey]' derivation='Avg' name='[avg:obey:qk]' pivot='key' type='quantitative' />
            <column caption='Breed' datatype='string' name='[breed]' role='dimension' type='nominal' />
            <column-instance column='[Small Breeds]' derivation='InOut' name='[io:Small Breeds:nk]' pivot='key' type='nominal'>
              <aliases>
                <alias key='false' value='Medium &amp; Large' />
                <alias key='true' value='Small' />
              </aliases>
            </column-instance>
            <column-instance column='[breed]' derivation='None' name='[none:breed:nk]' pivot='key' type='nominal' />
            <column caption='Obey' datatype='real' name='[obey]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[none:breed:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:breed:nk]' />
              <groupfilter function='member' level='[none:breed:nk]' member='&quot;Alaskan Malamute&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[none:breed:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[io:Small Breeds:nk]</rows>
        <cols>[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[avg:obey:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Group/Obedience'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[Breed (Akc Breed Info.Csv) (group)]</field>
            <field>[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[Breed (group)]</field>
            <field>[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[none:Calculation_4869305995601158144:qk]</field>
            <field>[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[none:breed:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Group/Obedience b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[Breed (Akc Breed Info.Csv) (group)]</field>
            <field>[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[Breed (group)]</field>
            <field>[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[none:Calculation_4869305995601158144:qk]</field>
            <field>[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[none:breed:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Group/Lower reps'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[Breed (group)]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Alaskan Malamute&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[Breed (group)]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Group/Upper reps'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[Breed (group)]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Alaskan Malamute&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[Breed (group)]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Set/Small dog obedience'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[io:Small Breeds:nk]</field>
            <field>[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[none:breed:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Set/Small dog min reps'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[io:Small Breeds:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Set/Small dog max reps'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[io:Small Breeds:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Set/Large dog obedience'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[io:Large Breeds:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Set/Large dog min reps'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1x30vuo1nmq8ge13q5xmm0voq46k].[io:Large Breeds:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='278' name='Group/Lower reps' width='384'>
      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
      ewEiBN7tmcLiTOCkqKKMnFFG1j7rPg3AQrdrCmqSkSgAZO7x3M6tw44tu8m9JXEG+t7Jj6eu
      JgEg2v4ita0RAAoLvjrN1YgCQOaO+JfEAVxXsWCE1a7PvQUAnX9OrY6W/Ty8qwkAV8F6vpXt
      nOaKDGe16z4AmTusP31AGLhwvedw9K2fWvEuDtX+goa2xIFx5a3mZxuX6zBMK5uW52p1DERk
      8vS0H+Yfd9UlghnIW72JH5blquGZZtETL3CgLabjIHNHyn/OxAXERhnbmaev/RSI07r/afZe
      uCHMy/otD45wdZBMGbuDf93TDKgzLHOIIy2DxcDI96DCJx/+cQqqMVmclmcf5UAgMeSTWVTJ
      jx4oQQ/gmAlsWvf9S99d8i5NAssccs5OTAKH3+KDYe/ysukMngTgmoyrp6gwswQPPX2h8S9Y
      t4XH1fjPIBYn3470/V1DQDKXuK/ntkwIh8O88U4P+UVJmh27i9/3NU55X8+a4gLnPrvrMDsb
      En2wvMotbFypZy7NLE5ur6xkYQzmo8tAZU5J444VPgBaX2gg2X2mnS31tAG4isjP0vnPRDvx
      24uXef5QD9ybgZz4lpdQVlJCSUmJAkDmluw7v00mQMTPPzx7eNDzfnpOvMi2ujYAfGXf5pIn
      RcgV6ibQN7ywbOVSDS/MAnoaqMw5Pcf381itP/GDx0dx4RI4fRJ//+8G8Jbz1NYKdD3KBLNO
      8JOH9ly45HM0Betq2LhSj4SeTuoByJyTXngf2zaUJu70jQTxNzdfaPw9BZVq/CdLyiKuGcfq
      XV2fT1opMjbqAcjcFe+hve0DvnQtwu79jNTsW/BlqekX6acAEBExlIaAREQMpQAQETGUAkBE
      xFAKABERQykAREQMpQAQETGUAkBExFAKABERQykAREQMpQAQETGUAkBExFAKABERQykAREQM
      pQAQETGUAkBExFAKABERQykAREQMpQAQETGUAkBExFAKABERQykAREQMpQAQETGUAkBExFAK
      ABERQykAREQMpQAQETGUAkBExFAKABERQykAREQMpQAQETGUAkBExFAKABERQykAREQMpQAQ
      ETGUAkBExFAKABERQykAREQMpQAQETGUAkBExFAKABERQykAREQMpQAQETGUAkBExFAKABER
      QykAREQMpQAQETGUAkBExFAKABERQykAREQMpQAQETGUAkBExFAKABERQykAREQMpQAQETGU
      AkBExFAKABERQykAREQMpQAQETGUAkBExFAKABERQ/1/0bze64vpQ20AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='278' name='Group/Obedience' width='384'>
      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
      QUqd7+i7PN/UwKN1P+SQL0B0RBBYkS4af7gD/8AyE6uWpcEy3FdIq4FK2hm6kiROD+WlS+Hs
      abyDa9W7q3lye82oJ0UvLSPsXMuTuzeM2N5L48P1tA3cnOIpK2fpQjjd7r20Vn31tiep8Yx+
      /nS69ZkrUuZ8W900bNuB79LYjh23ZxnXXz+fcx+8R0fg8hLRa+ueYEOxAkABIGmp98QLPL6/
      ddQ4r7OklvoHK5I2tl2H9rCrJQCuSp56bD2jFi+2enlh7+O0BkaVyrpt9VQlafyvpD5zSeqc
      7ziB4y386tetBJPcSWp3FXHfX/3V5VVLDacAkPQV76Oz4xQX7Iux+j8mK38Znrwrb2r7ujs5
      1XOBxVkWH8eyWFY8yaWFZ6g+KSPFznc80seHH4X51LKw2RbgvG4JOdlm3/c/kgJARMRQmgQW
      ETGUAkBExFAKABERQykAREQMpQAQETGUAkBExFAKABERQykAREQMpQAQETGUAkBExFAKABER
      QykAREQMpQAQETGUAkBExFAKABERQykAREQMpQAQETGUAkBExFAKABERQykAREQMpQAQETGU
      AkBExFAKABERQykAREQMpQAQETGUAkBExFAKABERQykAREQMpQAQETGUAkBExFAKABERQykA
      REQMpQAQETGUAkBExFAKABERQykAREQMpQAQETGUAkBExFAKABERQykAREQMpQAQETGUAkBE
      xFAKABERQykAREQMpQAQETGUAkBExFAKABERQykAREQMpQAQETGUAkBExFAKABERQykAREQM
      pQAQETGUAkBExFAKABERQykAREQMpQAQETGUAkBExFAKABERQykAREQM9f8B93VMO0nUE1MA
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Group/Obedience b' width='384'>
      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
      Uq677O+1fgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='278' name='Group/Upper reps' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAEWCAYAAABv+EDhAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAduklEQVR4nO3df3CT16Hm8W8XYSGltsBdEznBdZ2J0rimztq5cQn1hRB3as946h1g1kPY
      ptxctgNT91I610kTX982aSkhhEwo09ytt2G73HQp67ZxlxnfxdkQx6xKXLexNgRfJxGD65jG
      SrwxyA4Sgpdh/5AN/iH/trGl83xmMhP0vufV0ZF9nvc9532PP3Xt2rVriIiIcf7NfFdARETm
      hwJARMRQCgAREUMpAEREDKUAEBExlAJARMRQCgAREUMpAEREDKUAEBExlAJARMRQCgAREUMp
      AEREDKUAEBExlAJARMRQCgAREUMpAEREDKUAEBExlAJARMRQCgAREUMpAEREDKUAEBExlAJA
      RMRQCgAREUMpAEREDKUAEBExlAJARMRQCgAREUMpAEREDKUAEBExlAJARMRQCgAREUMpAERE
      DKUAEBExlAJARMRQCgAREUMpAEREDKUAEBExlAJARMRQCgAREUMpAEREDKUAEBExlAJARMRQ
      CgAREUMpAEREDKUAEBExlAJARMRQCgAREUMpAEREDKUAEBExlAJARMRQCgAREUMpAEREDKUA
      EBExlAJARMRQCgAREUMpACSuhUKh+a5Cwujv76e/v3++qxH34qkdFQAiIoZSAIiIGEoBICJi
      KAWAiIihFAAiIob61LVr167NdyVEpisUCnHp9Mb5roZIXNIVgIiIoRQAIiKGUgCIiBhKASAi
      YigFgIiIoRQAC53VzbEjL3HkaCuR+a6LiCQUBcBCd/kCbzR6aXztPQWAiMwqBcBCtwjsAK4k
      bPNdFxFJKAoAERFD6aQygVmRCKFIBMuysC1ZgtPpnPoXbllEroLdHqukRagvxCXLwmZbgjNl
      cse3Qr10fxjEAmxLXKSnp+oHUWQe6Pcu0UR6aWl8hVffaKYzEB6x0UVh+SM8VJQ9/IuP+Dnw
      vX2cXbGe3ZUlOIHu1qP84shrdAbDgJuK558i1zmwv9VL029qqW/0ERxx/Jy8FZz1tbFm5/Ns
      yHYO24rVw7EXf06dr3NEvdyUVnybsty0mX56EZkCBUCCCZ19hYN1jQP/cpDpuYNblyXx/ts+
      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
      fUqKB5Lob04AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='238' name='Set/Large dog min reps' width='384'>
      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
    </thumbnail>
    <thumbnail height='238' name='Set/Large dog obedience' width='384'>
      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
      B0dCrU+xiX9wAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='238' name='Set/Small dog max reps' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAADuCAYAAAAwTtAhAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAcDElEQVR4nO3df3TUZWLv8fdeBsIEyUBsZKLEMdZR07ixYeuIaQpE9pq0OY0HOM0Fj5a6
      dA9sYyOeDf6gtOrKIioeU1p6zHFzt6x7MM26xOWe9BKvGKGzLJ29MlckjTocwhB2M5J1YBKZ
      cWA83D8mIb8mJBAyITyf11/JfH89M/PN8/k+3+f5PvnG+fPnzyMiIsb5bxNdABERmRgKABER
      QykAREQMpQAQETGUAkBExFAKABERQykAREQMpQAQETGUAkBExFAKABERQykAREQMpQAQETGU
      AkBExFAKABERQykAREQMpQAQETGUAkBExFAKABERQykAREQMpQAQETGUAkBExFAKABERQykA
      REQMpQAQETGUAkBExFAKABERQykAREQMpQAQETGUAkBExFAKABERQykAREQMpQAQETGUAkBE
      xFAKABERQykAREQMpQAQETGUAkBExFAKABERQykAREQMpQAQETGUAkBExFAKABERQykAREQM
      pQAQETGUAkBExFAKABERQykAREQMpQAQETGUAkBExFAKABERQykAREQMpQAQETGUAkBExFAK
      ABERQykAREQMpQAQGUfhcHiiiyCTXHd3N93d3eOybwWAiIihFAAiIoZSAIiIGEoBICJiKAWA
      iIihLBNdAJFr3YPr6ya6CCIJqQUgImIoBYCIiKEUACIihlIAiIgYSgEgQhTf/j3s2r2fztil
      LBOZ3DQKSK6IrvZDfPDBfg4fOcrpSPy1WTfM5dbb7+Zb992DMyN1Ygt4UV/z8Tv1NIVs3LKg
      gAzLaJeJTG46nWWMYhyse5maZv+QJaFQCL+vhebGHdjyH+KFNQtJmYASjobFCoSsTL3EZSKT
      mQJAxqR9779cqPydheUsK8lnTtoMiHbx+TEf7g+acLcECH3SQRSu2gAQMZECQMagi183tgCQ
      X76BNYuz+halZJCdl0F2XgHLOg6y77OZXM03gURMpACQyxf9DZ+EABwsLswadrXUzHmUZI5i
      d+EgwdAZYjGYbsskI63/6RmjK3iKM2e+ImaZzvWZGSMESoxoOEz0qxgxi4XpKWmkqvkhMoAC
      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
      vdWv1TAvdWzHUgtAJKk6efMfeit/B6s2rMWVlQqxIHu3/yM7PAG89ZvZefNrLHWO8a9bJqEY
      nSdDAOSWruJPc2YSiw1d6xwWbpk29qMpAESSqOvgbtwRABsrN67HldGzwJLOwlXriZ15ivqW
      CE0/fY+S58tQBJjmLIGOCGBjfqEL5zjfDdQoIJGkieF1fwiAo/S7FGQMXp7C4r/6S2wAATef
      dCW5eDLxor/hkwDALGbOGP/DKQBEkiXq45ctEcDKH983zD3+tDspdACE8H4STGLh5KoQ7eY0
      gO1ObkoZ/8MpAESSzfYtvpkx3N3XVHLudADw6dHPk1cmuSqEPz9GCLDdMZe0JBxPfQAiyRI9
      RxTAOoPpF1ntppw7ocmPNUnFkqvHF8dPABDyNLLntm7ORc4xdepULBYrs2/O5o7sTK5kw0AB
      IJIk4d8cIQBcGO85HP1VGuvLzhM9PwWo31GfYA0bheWPUr4454oEgU41EZGrhPOB77Hq5s5+
      NbMFYt2caP2IfZ4WIoRw11fz8bFVvLzKNebjKQBEkmTa79mxApER7u1M0Z+lsSzp2bgKhg4Q
      cBUsZOnKLjxv/zO1zX5Cnlp2P3A3JVljaweoE1gkSSxpGdwwivVOHj823kWRyciShmv59yl3
      xq8gDnp/O+ZdKgBEkuXrWLwTOPARR8LDrRSj3XcUgOszrktSwWTySOHWu+YCEA1/Nea9KQBE
      kiX1Ju62AwT49eFhxvjHOvi/3ngvce4fZCataDKJnD0LjDyWYDQUACJJk8Y9C5wAeN5upDPB
      Gu17G2gBsLrIy1RfgFm68OzxEEww90+fdprej88ge8ftc8Z8RAWASBJl3fcAdoCQmx++vof+
      d4KCh3aysb4FAGfJAwyZKUKubeFjvF1fyzMVz7LL4yM8KAhiXW3UPbuReAPRQcGdY58oSNNB
      iyRZ8OCbPFPjjv9ic1I4by6cPoq7938DOEp5ZX1ZUp4ElatIrJ3aqo14LtzbseJw3smcOVM5
      8/lxWnx9U0QXVbzI8jwFgMik1HlwJz+saRpyH9eWX86GNYtV+Rsrim9/Iz97pwl/aOhSqz2X
      h/76r+NTiF8BCgCRiRIN0tpyhHPW2cS6TzEz606cmar6JS7aFeTkFyG+isWwWKZju/4G0tOu
      7AxxCgAREUOpE1hExFAKABERQykAREQMpQAQETGUAkBExFAKABERQykAREQMpQAQETGUAkBE
      xFAKABERQykAREQMpQAQETGUAkBExFAKABERQykAREQMpQAQETGUAkBExFAKABERQykAREQM
      pQAQETGUAkBExFAKABERQykAREQMpQAQETGUAkBExFAKABERQykAREQMpQAQETGUAkBExFAK
      ABERQykAREQMpQAQETGUAkBExFAKABERQykAREQMpQAQETGUAkBExFAKABERQykAREQMpQAQ
      ETGUAkBExFAKABERQykAREQMpQAQETGUAkBExFAKABERQykAREQMpQAQETGUAkBExFAKABER
      QykAREQMpQAQETGUAkBExFAKABERQykAREQMpQAQETGUAkBExFAKABERQykAREQMpQAQETHU
      /weIQLqnoLdXIAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='238' name='Set/Small dog min reps' width='384'>
      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
    </thumbnail>
    <thumbnail height='238' name='Set/Small dog obedience' width='384'>
      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
      AElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
